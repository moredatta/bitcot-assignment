{
  "/home/bio-datta/my-lambda-project/my-graphql-lambda": {
    "versionSfCore": null,
    "versionFramework": "4.0.33",
    "isWithinCompose": false,
    "composeOrgName": null,
    "servicePath": "/home/bio-datta/my-lambda-project/my-graphql-lambda",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "my-graphql-lambda",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            },
            "QueryHandlerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/my-graphql-lambda-dev-queryHandler"
              }
            },
            "MutationHandlerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/my-graphql-lambda-dev-mutationHandler"
              }
            },
            "SubscriptionHandlerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/my-graphql-lambda-dev-subscriptionHandler"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "my-graphql-lambda",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-graphql-lambda-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-graphql-lambda-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "my-graphql-lambda",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "QueryHandlerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/my-graphql-lambda/dev/1717399229827-2024-06-03T07:20:29.827Z/my-graphql-lambda.zip"
                },
                "Handler": "handler.queryHandler",
                "Runtime": "nodejs20.x",
                "FunctionName": "my-graphql-lambda-dev-queryHandler",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "QueryHandlerLogGroup"
              ]
            },
            "MutationHandlerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/my-graphql-lambda/dev/1717399229827-2024-06-03T07:20:29.827Z/my-graphql-lambda.zip"
                },
                "Handler": "handler.mutationHandler",
                "Runtime": "nodejs20.x",
                "FunctionName": "my-graphql-lambda-dev-mutationHandler",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "MutationHandlerLogGroup"
              ]
            },
            "SubscriptionHandlerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": {
                    "Ref": "ServerlessDeploymentBucket"
                  },
                  "S3Key": "serverless/my-graphql-lambda/dev/1717399229827-2024-06-03T07:20:29.827Z/my-graphql-lambda.zip"
                },
                "Handler": "handler.subscriptionHandler",
                "Runtime": "nodejs20.x",
                "FunctionName": "my-graphql-lambda-dev-subscriptionHandler",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "SubscriptionHandlerLogGroup"
              ]
            },
            "QueryHandlerLambdaVersionngJZVWebKkOrQscNdwcy06vRgsNAAIxZc8xBxnZZwo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "QueryHandlerLambdaFunction"
                },
                "CodeSha256": "mfzgYWYsKAWjcspFj6mrEuIgdTgxGs1+jOxXw0Hekt8="
              }
            },
            "MutationHandlerLambdaVersionIBcBaXSW7Flq7KIUhAUJcPUIQxFVqgUfpyUZVM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "MutationHandlerLambdaFunction"
                },
                "CodeSha256": "mfzgYWYsKAWjcspFj6mrEuIgdTgxGs1+jOxXw0Hekt8="
              }
            },
            "SubscriptionHandlerLambdaVersion0gpn5uJ1Nle8wXbuoWVYWa0vhz3mvE6PA0OkuHePgxQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "SubscriptionHandlerLambdaFunction"
                },
                "CodeSha256": "mfzgYWYsKAWjcspFj6mrEuIgdTgxGs1+jOxXw0Hekt8="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-my-graphql-lambda",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceQuery": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "query",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceMutation": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "mutation",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceSubscription": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "subscription",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodQueryPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceQuery"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "QueryHandlerLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "QueryHandlerLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodMutationPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceMutation"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "MutationHandlerLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "MutationHandlerLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodSubscriptionPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSubscription"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "SubscriptionHandlerLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "SubscriptionHandlerLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1717399224896": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodQueryPost",
                "ApiGatewayMethodMutationPost",
                "ApiGatewayMethodSubscriptionPost"
              ]
            },
            "QueryHandlerLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "QueryHandlerLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "MutationHandlerLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "MutationHandlerLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "SubscriptionHandlerLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "SubscriptionHandlerLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "Export": {
                "Name": "sls-my-graphql-lambda-dev-ServerlessDeploymentBucketName"
              }
            },
            "QueryHandlerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "QueryHandlerLambdaVersionngJZVWebKkOrQscNdwcy06vRgsNAAIxZc8xBxnZZwo"
              },
              "Export": {
                "Name": "sls-my-graphql-lambda-dev-QueryHandlerLambdaFunctionQualifiedArn"
              }
            },
            "MutationHandlerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "MutationHandlerLambdaVersionIBcBaXSW7Flq7KIUhAUJcPUIQxFVqgUfpyUZVM"
              },
              "Export": {
                "Name": "sls-my-graphql-lambda-dev-MutationHandlerLambdaFunctionQualifiedArn"
              }
            },
            "SubscriptionHandlerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "SubscriptionHandlerLambdaVersion0gpn5uJ1Nle8wXbuoWVYWa0vhz3mvE6PA0OkuHePgxQ"
              },
              "Export": {
                "Name": "sls-my-graphql-lambda-dev-SubscriptionHandlerLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-my-graphql-lambda-dev-ServiceEndpoint"
              }
            }
          }
        },
        "coreCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ServerlessDeploymentBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketEncryption": {
                  "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
                }
              }
            },
            "ServerlessDeploymentBucketPolicy": {
              "Type": "AWS::S3::BucketPolicy",
              "Properties": {
                "Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "PolicyDocument": {
                  "Statement": [
                    {
                      "Action": "s3:*",
                      "Effect": "Deny",
                      "Principal": "*",
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              },
                              "/*"
                            ]
                          ]
                        },
                        {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":s3:::",
                              {
                                "Ref": "ServerlessDeploymentBucket"
                              }
                            ]
                          ]
                        }
                      ],
                      "Condition": {
                        "Bool": {
                          "aws:SecureTransport": false
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": {
                "Ref": "ServerlessDeploymentBucket"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "queryHandler": {
          "handler": "handler.queryHandler",
          "events": [
            {
              "http": {
                "path": "query",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "my-graphql-lambda-dev-queryHandler",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "QueryHandlerLambdaVersionngJZVWebKkOrQscNdwcy06vRgsNAAIxZc8xBxnZZwo"
        },
        "mutationHandler": {
          "handler": "handler.mutationHandler",
          "events": [
            {
              "http": {
                "path": "mutation",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "my-graphql-lambda-dev-mutationHandler",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "MutationHandlerLambdaVersionIBcBaXSW7Flq7KIUhAUJcPUIQxFVqgUfpyUZVM"
        },
        "subscriptionHandler": {
          "handler": "handler.subscriptionHandler",
          "events": [
            {
              "http": {
                "path": "subscription",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "my-graphql-lambda-dev-subscriptionHandler",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs20.x",
          "vpc": {},
          "versionLogicalId": "SubscriptionHandlerLambdaVersion0gpn5uJ1Nle8wXbuoWVYWa0vhz3mvE6PA0OkuHePgxQ"
        }
      }
    },
    "serviceRawFile": "service: my-graphql-lambda\nprovider:\n  name: aws\n  runtime: nodejs20.x\nfunctions:\n  queryHandler:\n    handler: handler.queryHandler\n    events:\n      - http:\n          path: query\n          method: post\n  mutationHandler:\n    handler: handler.mutationHandler\n    events:\n      - http:\n          path: mutation\n          method: post\n  subscriptionHandler:\n    handler: handler.subscriptionHandler\n    events:\n      - http:\n          path: subscription\n          method: post\n\n\n\n\n\n\n\n\n\n\n\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "507c4568-b49c-495f-80b6-b8895fea79a9",
    "orgName": "biobitcot",
    "userId": "MBCW4FCkrhBkjK1tXf",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "biobitcot",
    "subscription": null,
    "userEmail": "mordatta@gmail.com",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "975049987984",
    "versionSf": "4.0.33",
    "serviceProviderAwsCfStackName": "my-graphql-lambda-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:975049987984:stack/my-graphql-lambda-dev/86643bd0-2179-11ef-a770-12e04129f4cf",
    "serviceProviderAwsCfStackCreated": "2024-06-03T07:18:50.215Z",
    "serviceProviderAwsCfStackUpdated": "2024-06-03T07:19:59.874Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "SubscriptionHandlerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:975049987984:function:my-graphql-lambda-dev-subscriptionHandler:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-my-graphql-lambda-dev-SubscriptionHandlerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "QueryHandlerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:975049987984:function:my-graphql-lambda-dev-queryHandler:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-my-graphql-lambda-dev-QueryHandlerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "MutationHandlerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:975049987984:function:my-graphql-lambda-dev-mutationHandler:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-my-graphql-lambda-dev-MutationHandlerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://wzddat3ctc.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-my-graphql-lambda-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "my-graphql-lambda-dev-serverlessdeploymentbucket-m1egwxnchbul",
        "ExportName": "sls-my-graphql-lambda-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}